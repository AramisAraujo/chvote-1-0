/*
 * This file was automatically generated by EvoSuite
 * Sun Jun 03 17:59:28 GMT 2018
 */

package ch.ge.ve.commons.fileutils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ch.ge.ve.commons.fileutils.StreamHasher;
import ch.ge.ve.commons.properties.PropertyConfigurationService;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.security.MessageDigest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StreamHasher_ESTest extends StreamHasher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      StreamHasher streamHasher0 = new StreamHasher((PropertyConfigurationService) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1349), 2);
      // Undeclared exception!
      try { 
        streamHasher0.computeHash(byteArrayInputStream0, (MessageDigest) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StreamHasher streamHasher0 = new StreamHasher((PropertyConfigurationService) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream(2448);
      try { 
        streamHasher0.computeHash(pipedInputStream0, (MessageDigest) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StreamHasher streamHasher0 = new StreamHasher((PropertyConfigurationService) null);
      byte[] byteArray0 = new byte[21];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)19, (byte)19);
      // Undeclared exception!
      try { 
        streamHasher0.computeHash(byteArrayInputStream0, (MessageDigest) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.ge.ve.commons.fileutils.StreamHasher", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1349), (-1349));
      StreamHasher streamHasher0 = new StreamHasher((PropertyConfigurationService) null);
      // Undeclared exception!
      try { 
        streamHasher0.computeHash(byteArrayInputStream0, (MessageDigest) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.ge.ve.commons.fileutils.StreamHasher", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StreamHasher streamHasher0 = new StreamHasher((PropertyConfigurationService) null);
      // Undeclared exception!
      try { 
        streamHasher0.threadSafeComputeHash((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.ge.ve.commons.crypto.utils.MessageDigestFactory", e);
      }
  }
}
