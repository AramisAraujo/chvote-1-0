/*
 * This file was automatically generated by EvoSuite
 * Sun Jun 03 18:02:46 GMT 2018
 */

package ch.ge.ve.commons.crypto.ballot;

import org.junit.Test;
import static org.junit.Assert.*;
import ch.ge.ve.commons.crypto.ballot.AuthenticatedBallot;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AuthenticatedBallot_ESTest extends AuthenticatedBallot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      AuthenticatedBallot authenticatedBallot0 = new AuthenticatedBallot(byteArray0, byteArray0, (byte) (-101), byteArray0);
      authenticatedBallot0.getWrappedKey();
      assertEquals((-101), authenticatedBallot0.getBallotIndex());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      AuthenticatedBallot authenticatedBallot0 = new AuthenticatedBallot(byteArray0, byteArray0, 0, byteArray0);
      authenticatedBallot0.getWrappedKey();
      assertEquals(0, authenticatedBallot0.getBallotIndex());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      AuthenticatedBallot authenticatedBallot0 = new AuthenticatedBallot(byteArray0, byteArray0, (byte) (-101), byteArray0);
      authenticatedBallot0.getTag();
      assertEquals((-101), authenticatedBallot0.getBallotIndex());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      AuthenticatedBallot authenticatedBallot0 = new AuthenticatedBallot(byteArray0, byteArray0, 0, byteArray0);
      authenticatedBallot0.getTag();
      assertEquals(0, authenticatedBallot0.getBallotIndex());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      AuthenticatedBallot authenticatedBallot0 = new AuthenticatedBallot(byteArray0, byteArray0, 0, byteArray0);
      int int0 = authenticatedBallot0.getBallotIndex();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      AuthenticatedBallot authenticatedBallot0 = new AuthenticatedBallot(byteArray0, byteArray0, (byte) (-101), byteArray0);
      int int0 = authenticatedBallot0.getBallotIndex();
      assertEquals((-101), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      AuthenticatedBallot authenticatedBallot0 = new AuthenticatedBallot(byteArray0, byteArray0, (byte) (-101), byteArray0);
      authenticatedBallot0.getAuthenticatedEncryptedBallot();
      assertEquals((-101), authenticatedBallot0.getBallotIndex());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      AuthenticatedBallot authenticatedBallot0 = new AuthenticatedBallot(byteArray0, byteArray0, 0, byteArray0);
      authenticatedBallot0.getAuthenticatedEncryptedBallot();
      assertEquals(0, authenticatedBallot0.getBallotIndex());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AuthenticatedBallot authenticatedBallot0 = new AuthenticatedBallot((byte[]) null, (byte[]) null, 3171, (byte[]) null);
      authenticatedBallot0.getWrappedKey();
      assertEquals(3171, authenticatedBallot0.getBallotIndex());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AuthenticatedBallot authenticatedBallot0 = new AuthenticatedBallot((byte[]) null, (byte[]) null, 3171, (byte[]) null);
      authenticatedBallot0.getAuthenticatedEncryptedBallot();
      assertEquals(3171, authenticatedBallot0.getBallotIndex());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AuthenticatedBallot authenticatedBallot0 = new AuthenticatedBallot((byte[]) null, (byte[]) null, 3171, (byte[]) null);
      int int0 = authenticatedBallot0.getBallotIndex();
      assertEquals(3171, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AuthenticatedBallot authenticatedBallot0 = new AuthenticatedBallot((byte[]) null, (byte[]) null, 3171, (byte[]) null);
      authenticatedBallot0.getTag();
      assertEquals(3171, authenticatedBallot0.getBallotIndex());
  }
}
