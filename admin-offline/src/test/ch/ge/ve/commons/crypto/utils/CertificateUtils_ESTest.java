/*
 * This file was automatically generated by EvoSuite
 * Sun Jun 03 18:11:26 GMT 2018
 */

package ch.ge.ve.commons.crypto.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ch.ge.ve.commons.crypto.utils.CertificateUtils;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.SequenceInputStream;
import java.security.KeyStore;
import java.security.cert.CertificateException;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CertificateUtils_ESTest extends CertificateUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CertificateUtils certificateUtils0 = new CertificateUtils();
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      try { 
        certificateUtils0.getCertificate(sequenceInputStream1);
        fail("Expecting exception: CertificateException");
      
      } catch(CertificateException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CertificateUtils certificateUtils0 = new CertificateUtils();
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1130), 1);
      // Undeclared exception!
      try { 
        certificateUtils0.getCertificate(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1130
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CertificateUtils certificateUtils0 = new CertificateUtils();
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      try { 
        certificateUtils0.getCertificate(sequenceInputStream0);
        fail("Expecting exception: CertificateException");
      
      } catch(CertificateException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      KeyStore keyStore0 = CertificateUtils.createPKCS12KeyStore();
      assertEquals("jks", keyStore0.getDefaultType());
  }
}
